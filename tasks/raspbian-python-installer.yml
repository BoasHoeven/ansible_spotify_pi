---
- name: Extract major and minor version numbers from Python version string
  set_fact:
    python_version_major_minor: "{{ python_version.split('.')[0:2] | join('.') }}"

- name: Check if Python {{ python_version_major_minor }} is installed
  command: python{{ python_version_major_minor }} --version
  register: python_version_installed
  ignore_errors: true
  changed_when: false

- name: Install dependencies
  become: true
  apt:
    name:
      - git
      - libopus-dev
      - libffi-dev
      - libsodium-dev
      - ffmpeg
      - build-essential
      - libncursesw5-dev
      - libgdbm-dev
      - libc6-dev
      - zlib1g-dev
      - libsqlite3-dev
      - tk-dev
      - libssl-dev
      - openssl
    state: present

- name: "Download python{{ python_version }}"
  get_url:
    url="https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tar.xz"
    dest="/tmp/Python-{{ python_version }}.tar.xz"
  when: python_version_installed.rc != 0
  become: false

- name: "Unarchive python{{ python_version }}"
  unarchive:
    src="/tmp/Python-{{ python_version }}.tar.xz"
    dest="/tmp/"
    copy=no
    creates="/tmp/Python-{{ python_version }}"
  when: python_version_installed.rc != 0
  become: false

- name: "configure python{{ python_version }} build"
  command: ./configure --enable-optimizations
  args:
    chdir: "/tmp/Python-{{ python_version }}"
    creates: "/tmp/Python-{{ python_version }}/Makefile"
  when: python_version_installed.rc != 0
  become: false

- name: "build python{{ python_version }}"
  # not using make module to be able to use -j and creates option to fully skip step
  command: make -j{{ threads }}
  args:
    chdir: "/tmp/Python-{{ python_version }}"
    creates: "/tmp/Python-{{ python_version }}/python"
  when: python_version_installed.rc != 0
  become: false

- name: "install python{{ python_version }}"
  make:
    chdir: "/tmp/Python-{{ python_version }}"
    target: altinstall
  when: python_version_installed.rc != 0
  become: true
